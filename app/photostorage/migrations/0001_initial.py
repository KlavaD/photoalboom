# Generated by Django 5.2 on 2025-04-05 05:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('slug', models.CharField(null=False, unique=True)),
            ],
            options={
                'verbose_name': 'Семья',
                'verbose_name_plural': 'Семьи',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название группы фотографий')),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(verbose_name='Описание группы')),
            ],
            options={
                'verbose_name': 'Группа фото',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название тэга')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Группа фото',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='photo/', verbose_name='Фото')),
                ('created_date', models.DateTimeField(verbose_name='Дата фотографии')),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='photostorage.family', verbose_name='Семья')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'default_related_name': 'photo',
            },
        ),
        migrations.CreateModel(
            name='PhotoGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photostorage.group')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photostorage.photo')),
            ],
            options={
                'verbose_name': 'Фото:Группа',
                'verbose_name_plural': 'Фото:Группы',
            },
        ),
        migrations.AddField(
            model_name='photo',
            name='group',
            field=models.ManyToManyField(blank=True, through='photostorage.PhotoGroup', to='photostorage.group', verbose_name='Группы'),
        ),
        migrations.CreateModel(
            name='PhotoTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photostorage.photo')),
                ('tags', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photostorage.tag')),
            ],
            options={
                'verbose_name': 'Фото:Тэг',
                'verbose_name_plural': 'Фото:Тэги',
            },
        ),
        migrations.AddField(
            model_name='photo',
            name='tag',
            field=models.ManyToManyField(blank=True, through='photostorage.PhotoTag', to='photostorage.tag', verbose_name='Тэги'),
        ),
    ]
